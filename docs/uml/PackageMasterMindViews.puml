@startuml


package mastermind.views {

    class AbstractCommand{
        # String name
        + AbstractCommand(String name)
        + getName(): String
    }

    class ColorView{
        - {static} final char[] INITIALS
        - final Color color
        ~ ColorView(Color color)
        ~ {static} allInitials(): String
        + {static} getInstance(char character): Color
        + write(): void
    }

    class ErrorView{
        - {static} final String[] MESSAGES
        - final Error error;
        + ErrorView(Error error)
        + writeln(): void
    }

    class Menu{
        - {static} final String TITLE_OPTION
        - final List<Command> commands
        + Menu()
        + execute(): void
        + addCommand(Command command): void
    }

     class MessageView{
         + {static} TURN: Message
         + {static} SECRET: Message
         + {static} RESUME: Message
         + {static} RESULT: Message
         + {static} PROPOSED_COMBINATION: Message
         + {static} TITLE: Message
         + {static} WINNER: Message
         + {static} LOOSER: Message
         + {static} PROPOSAL_COMMAND: Message
         + {static} UNDO_COMMAND: Message
         + {static} REDO_COMMAND: Message
         - message: String
         - Message(String)
         + {static} valueOf(String): Message
         ~ getMessage(): String
     }

     class ProposalCommand{
         - final InGameController inGameController
         + ProposalCommand(InGameController inGameController)
         + execute(): void
         + isActive(): boolean
     }

     class ProposalView{
        + readProposedCombination(): String
    }

    class ProposedCombinationView {
        + ProposedCombinationView()
        + write(int[]): void
    }

     class RedoCommand{
        - final InGameController inGameController
        + RedoCommand(InGameController inGameController)
        + execute(): void
        + isActive(): boolean
    }

    class ResultView{
        - final Result result;
        + ResultView()
        + writeln(int[]): void
    }

    class ResumeView{
        + ResumeView()
        + read(): boolean
    }

    class SecretCombinationView{
        + SecretCombinationView()
        + writeln(int): void
    }

    class StartView{
        + StartView()
        + write(): void
    }

    class UndoCommand{
        - final InGameController inGameController
        + UndoCommand(InGameController inGameController)
        + execute(): void
        + isActive(): boolean
    }

}

package mastermind.models {
    class Result
    class ProposedCombination
    class Combination
}

package mastermind.utils {
    class WithConsoleView
    class YesNoDialog
    class Error
    class Command
    class ClosedInterval
}


ErrorView ----|> WithConsoleView
ProposalView ----|> WithConsoleView
ProposedCombinationView ----|> WithConsoleView
SecretCombinationView ----|> WithConsoleView

Command <|--- AbstractCommand
AbstractCommand <|--- ProposalCommand
AbstractCommand <|--- UndoCommand
AbstractCommand <|--- RedoCommand

Menu *---> Command
Menu *---> Error
Menu *---> ClosedInterval

ProposalView ...> MessageView

ProposedCombinationView *---> ColorView
ProposedCombinationView *---> ProposedCombination

ResultView ...> MessageView
ResultView *---> Result

ResumeView ...> MessageView
ResumeView *---> YesNoDialog

SecretCombinationView *---> Combination
SecretCombinationView ...> MessageView

StartView *---> SecretCombinationView
StartView ...> MessageView

@enduml
